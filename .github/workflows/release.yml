name: Release

on:
  push:
    paths:
      - ".github/workflows/release.yml"
  workflow_dispatch:

env:
  VERSION: 0.1.${{ github.run_number }}

jobs:

  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: ado.exe
            asset_name: azdocli-windows-x86_64.exe
          - os: windows-11-arm
            target: aarch64-pc-windows-msvc
            artifact_name: ado.exe
            asset_name: azdocli-windows-arm64.exe
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: ado
            asset_name: azdocli-linux-x86_64
          - os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            artifact_name: ado
            asset_name: azdocli-linux-arm64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: ado
            asset_name: azdocli-macos-arm64
          - os: macos-13
            target: x86_64-apple-darwin
            artifact_name: ado
            asset_name: azdocli-macos-x86_64

    steps:
    - uses: actions/checkout@v4    
    - name: Update Version
      shell: pwsh
      run: |
        $version = (Get-Content -Path Cargo.toml -Raw) -replace 'version = "0.1.0"', 'version = "${{ env.VERSION }}"'
        $version | Set-Content -Path Cargo.toml
    - name: Install Rust
      uses: christianhelle/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    - name: Rust cache
      uses: christianhelle/rust-cache@v2      
    - name: Build
      run: cargo build --release
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: azdocli-${{ matrix.target }}
        path: target/release/ado*
        if-no-files-found: error

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4    
    - name: Create tag
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/${{ env.VERSION }}",
            sha: context.sha
          })
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: Upload Release Asset
      uses: christianhelle/action-gh-release@v1
      with:
        files: artifacts/**/*
        name: azdocli ${{ github.ref_name }}
        draft: false
        prerelease: false
        tag_name: ${{ env.VERSION }}